security:
  encoders:
    OC\UserBundle\Entity\User: sha512

  role_hierarchy:
    # Un admin hérite des droits d'auteur et de modération
    ROLE_ADMIN:       [ROLE_AUTEUR, ROLE_MODERATEUR]
    # On garde ce rôle superadmin, il nous resservira par la suite
    ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

  providers:
#    in_memory:
#      memory:
#        users:
#          user:  { password: userpass, roles: [ 'ROLE_AUTEUR' ] }
#          admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
#    main:
#      entity:
#          class: OC\UserBundle\Entity\User
#          property: username
    main:
      id: fos_user.user_provider.username

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main_login:
      # Cette expression régulière permet de prendre /login (mais pas /login_check !)
      pattern:   ^/login$
      anonymous: true # On autorise alors les anonymes sur ce pare-feu
    main_registration:
      pattern:   /register
      anonymous: true # On autorise alors les anonymes sur ce pare-feu
    main:
      pattern: ^/
      anonymous: false
      provider: main
      form_login:
        login_path: fos_user_security_login
        check_path: fos_user_security_check
      logout:
        path: fos_user_security_logout
        target: fos_user_security_login
      remember_me:
        secret: %secret%

  access_control:
      - { path: ^/admin, roles: ROLE_ADMIN }